#!/bin/bash

benchdir="./bench/"
bindir="./bin/"

RUST="cargo build --release"
GO="go build"
CPP="g++ -O2 -std=c++11 -pthread -I bench/serialization"

GREEN="\e[1m\e[32m"
BLUE="\e[1m\e[34m"
RESET="\e[0m"

FILE=measures/compilation-times.csv
echo language,compilation_time > ${FILE}

echo -e ${GREEN}"Cleaning bin/ ...\n"$RESET
rm -r ${bindir}

start=`date +%s%N`

echo -e ${GREEN}"Building Rust ..."$RESET
${RUST}

for section in `ls bench`; do
    echo -e ${BLUE}${section}${RESET}
    mkdir -p ${bindir}${section}/rust
    for f in $(ls ${benchdir}${section}/*.rs 2>/dev/null); do
        filename=`echo $f | sed 's:.*/::' | sed 's:.rs::'`
        cp target/release/${section}-$filename ${bindir}${section}/rust/$filename
    done
done
echo -e ${GREEN}"Built Rust!\n"${RESET}

end=`date +%s%N`
total_duration=$((end - start))
echo rust,${total_duration} >> ${FILE}

start=`date +%s%N`

echo -e ${GREEN}"Building Go ..."$RESET
for section in `ls bench`; do
    echo -e ${BLUE}${section}${RESET}
    mkdir -p ${bindir}${section}/go
    for f in $(ls ${benchdir}${section}/*.go 2>/dev/null) ; do
        ${GO} -o ${bindir}${section}/go $f
    done
done
echo -e ${GREEN}"Built Go!\n"${RESET}

end=`date +%s%N`
total_duration=$((end - start))
echo go,${total_duration} >> ${FILE}

start=`date +%s%N`

echo -e ${GREEN}"Building C++ ..."$RESET
for section in `ls bench`; do
    echo -e ${BLUE}${section}${RESET}
    mkdir -p ${bindir}${section}/cpp
    for f in $(ls ${benchdir}${section}/*.cpp 2>/dev/null) ; do
        OUT=$(basename $f | sed -E "s/(.*).cpp/\1/")
        ${CPP} -o ${bindir}${section}/cpp/$OUT $f
    done
done
echo -e ${GREEN}"Built C++!\n"${RESET}

end=`date +%s%N`
total_duration=$((end - start))
echo cpp,${total_duration} >> ${FILE}
